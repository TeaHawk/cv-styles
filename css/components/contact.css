/* === REVISED CONTACT COMPONENT CSS === */

/* Contact Section Container */
.contact-section {
    position: relative;
    margin-top: -20px; /* Create slight overlap with skills section */
    padding-top: 0;
}

/* Contact Entry Container */
.contact-entries {
    opacity: 0;
    transition: opacity 0.5s ease;
    position: relative;
    padding-bottom: var(--spacing-large);
}

.contact-entries.visible {
    opacity: 1;
}

.contact-entries.fade-out {
    opacity: 0;
}

/* Eagle Gargoyle Design */
.contact-entries {
    display: grid;
    grid-template-areas:
        "spine spine spine"
        "left-wing center right-wing"
        "bottom-left bottom-center bottom-right";
    grid-template-columns: 1fr auto 1fr;
    grid-template-rows: 20px auto auto;
    gap: var(--spacing-medium);
    margin-top: 10px; /* Space from T-stem */
    position: relative;
}

/* Central spine of eagle design */
.eagle-spine {
    grid-area: spine;
    height: 20px;
    width: 2px;
    background: var(--accent);
    justify-self: center;
    position: relative;
}

.eagle-spine::before,
.eagle-spine::after {
    content: '';
    position: absolute;
    width: 6px;
    height: 6px;
    background: var(--accent);
    transform: rotate(45deg);
}

.eagle-spine::before {
    top: -3px;
    left: -2px;
}

.eagle-spine::after {
    bottom: -3px;
    left: -2px;
}

/* Wing connecting lines */
.wing-line {
    position: absolute;
    background: var(--accent);
    height: 2px;
}

.wing-line.left {
    width: calc(50% - 20px);
    right: 50%;
    top: 20px;
    transform-origin: right;
    transform: rotate(-30deg);
}

.wing-line.right {
    width: calc(50% - 20px);
    left: 50%;
    top: 20px;
    transform-origin: left;
    transform: rotate(30deg);
}

/* Individual Contact Entry - Eagle Design */
.contact-entry.eagle-position-center {
    grid-area: center;
    min-height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 2;
}

.contact-entry.eagle-position-left {
    grid-area: left-wing;
    justify-self: end;
    width: 85%;
    transform-origin: right center;
    clip-path: polygon(10% 0, 100% 0, 100% 100%, 0 100%);
}

.contact-entry.eagle-position-right {
    grid-area: right-wing;
    justify-self: start;
    width: 85%;
    transform-origin: left center;
    clip-path: polygon(0 0, 90% 0, 100% 100%, 0 100%);
}

.contact-entry.eagle-position-bottom-center {
    grid-area: bottom-center;
    width: 60%;
    justify-self: center;
    margin-top: -10px;
    clip-path: polygon(0 0, 100% 0, 90% 100%, 10% 100%);
}

/* Contact Entry - Common Styling */
.contact-entry {
    position: relative;
    padding: var(--spacing-medium);
    text-decoration: none;
    transition: transform var(--transition-smooth);
    display: flex;
    align-items: center;
    overflow: hidden;
    min-height: 60px;
    z-index: 1;
    color: var(--text-primary);
}

/* ===== MULTIPLE BACKGROUND SOLUTION FOR PERFECT BORDERS ===== */
/* Base styling for all entries */
.contact-entry {
    background: var(--bg-secondary);
    filter: drop-shadow(0 0 1px var(--accent));
    isolation: isolate;
}

/* Outer border using pseudo-element */
.contact-entry::before {
    content: "";
    position: absolute;
    inset: -1px; /* Slightly larger than the main element */
    background: var(--accent);
    z-index: -1;
    /* Inherit the clip-path from the parent */
    clip-path: inherit;
}

/* Inner content area */
.contact-entry::after {
    content: "";
    position: absolute;
    inset: 1px; /* 1px smaller than the main element to create 1px border */
    background: var(--bg-secondary);
    z-index: -1;
    /* Inherit the clip-path but scale it slightly to be within the border */
    clip-path: inherit;
}

/* Content Styling */
.contact-content {
    display: flex;
    align-items: center;
    gap: var(--spacing-medium);
    width: 100%;
    justify-content: center;
    position: relative;
    z-index: 2; /* Above the pseudo-elements */
}

.contact-icon {
    font-size: 1.5rem;
    color: var(--accent);
    transition: transform var(--transition-quick);
}

.contact-entry:hover .contact-icon {
    transform: scale(1.1);
}

.contact-text {
    font-size: 0.95rem;
}

/* ===== COMPLETELY REVISED ART DECO FRAME ANIMATION ===== */
/* This approach uses custom clip-paths for animations that respect the original shape */

/* Base frame container */
.contact-frame {
    position: absolute;
    inset: 0;
    pointer-events: none;
    z-index: 3;
    clip-path: inherit;
    overflow: visible;
}

/* ===== SHAPE-SPECIFIC ANIMATIONS FOR EACH TRAPEZOID ===== */

/* --- SHAPE-ADAPTIVE ANIMATIONS --- */
/* We'll use a gradient-based approach that follows any shape */

/* Animation container for all shapes */
.contact-frame::before {
    content: "";
    position: absolute;
    inset: 3px; /* Inset to avoid overlapping the border */
    opacity: 0;
    transition: opacity 0.8s ease;
    clip-path: inherit;
    /* This creates animated borders that follow ANY shape */
    background: 
        /* Top border */
        linear-gradient(to right, var(--accent) 100%, var(--accent) 100%) top left / 0% 2px no-repeat,
        /* Right border */
        linear-gradient(to bottom, var(--accent) 100%, var(--accent) 100%) top right / 2px 0% no-repeat,
        /* Bottom border */
        linear-gradient(to left, var(--accent) 100%, var(--accent) 100%) bottom right / 0% 2px no-repeat,
        /* Left border */
        linear-gradient(to top, var(--accent) 100%, var(--accent) 100%) bottom left / 2px 0% no-repeat;
}

/* Animation timings for the border gradients */
.contact-entry:hover .contact-frame::before {
    opacity: 1;
    background: 
        /* Top border - animates from left to right */
        linear-gradient(to right, var(--accent) 100%, var(--accent) 100%) top left / 100% 2px no-repeat,
        /* Right border - animates from top to bottom */
        linear-gradient(to bottom, var(--accent) 100%, var(--accent) 100%) top right / 2px 100% no-repeat,
        /* Bottom border - animates from right to left */
        linear-gradient(to left, var(--accent) 100%, var(--accent) 100%) bottom right / 100% 2px no-repeat,
        /* Left border - animates from bottom to top */
        linear-gradient(to top, var(--accent) 100%, var(--accent) 100%) bottom left / 2px 100% no-repeat;
    transition: 
        opacity 0.1s ease,
        background-size 0.8s cubic-bezier(0.19, 1, 0.22, 1);
}

/* Art Deco Corners - Diamond style */
.contact-frame .frame-corner {
    position: absolute;
    width: 10px;
    height: 10px;
    opacity: 0;
    transition: transform 0.8s cubic-bezier(0.19, 1, 0.22, 1), 
                opacity 0.6s ease;
    z-index: 4;
}

/* Create the diamond shapes */
.contact-frame .frame-corner::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background: var(--accent);
    transform: rotate(45deg) scale(0);
    transition: transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1) 0.4s; /* Bouncy effect with delay */
    transform-origin: center;
}

/* ADAPTIVE CORNER POSITIONING FOR ALL SHAPES */

/* Top-left corner positioning with shape awareness */
.contact-frame .frame-corner.tl {
    top: 6px;
    left: 6px;
    transform: translate(-8px, -8px);
}

/* Top-right corner positioning with shape awareness */
.contact-frame .frame-corner.tr {
    top: 6px;
    right: 6px;
    transform: translate(8px, -8px);
}

/* Bottom-left corner positioning with shape awareness */
.contact-frame .frame-corner.bl {
    bottom: 6px;
    left: 6px;
    transform: translate(-8px, 8px);
}

/* Bottom-right corner positioning with shape awareness */
.contact-frame .frame-corner.br {
    bottom: 6px;
    right: 6px;
    transform: translate(8px, 8px);
}

/* Corner animations on hover */
.contact-entry:hover .contact-frame .frame-corner {
    transform: translate(0, 0);
    opacity: 1;
}

.contact-entry:hover .contact-frame .frame-corner::before {
    transform: rotate(45deg) scale(1);
}

/* Add a decorative inner glow effect on hover */
.contact-entry:hover::after {
    background: radial-gradient(
        circle at center,
        color-mix(in srgb, var(--bg-secondary) 90%, var(--accent)),
        var(--bg-secondary)
    );
    transition: background 0.8s ease;
}

/* Entry hover effect */
.contact-entry:hover {
    transform: translateY(-3px);
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
    transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1),
                filter 0.6s cubic-bezier(0.19, 1, 0.22, 1);
}

/* Animation for Entry */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.contact-entry {
    animation: fadeInUp 0.5s ease-out forwards;
    animation-delay: calc(var(--index, 0) * 0.15s);
    opacity: 0;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .contact-entries {
        grid-template-columns: 1fr;
        grid-template-areas:
            "spine"
            "center"
            "left-wing"
            "right-wing"
            "bottom-center";
    }
    
    .contact-entry.eagle-position-left,
    .contact-entry.eagle-position-right,
    .contact-entry.eagle-position-center,
    .contact-entry.eagle-position-bottom-center {
        width: 100%;
        justify-self: center;
        clip-path: none;
        border-radius: 0;
    }
    
    .wing-line.left,
    .wing-line.right {
        display: none;
    }
}

/* Print Styles */
@media print {
    .contact-section {
        page-break-inside: avoid;
        break-inside: avoid;
    }
    
    .contact-entries {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
    }
    
    .contact-entry {
        width: 45% !important;
        margin: 0 0 10px 0 !important;
        page-break-inside: avoid;
        break-inside: avoid;
        clip-path: none !important;
    }
    
    .eagle-spine,
    .wing-line {
        display: none;
    }
}
